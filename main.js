!function(){"use strict";const e={inputSelector:".js-modal-input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"modal-input-error",errorClass:"modal-error-visible"},t=document.querySelector(".profile"),s=document.querySelector("#card-add"),r=document.querySelector("#image-modal"),i={profile:t,profileEditButton:t.querySelector(".profile__edit-button"),profileAvatar:t.querySelector("#profile-avatar"),profileAvatarButton:t.querySelector("#profile__image-button"),profileTitle:t.querySelector(".profile__title"),updateAvatarForm:document.forms["update-avatar-form"],profileDescription:t.querySelector(".profile__description"),cardListEl:document.querySelector(".cards__list"),cardTemplate:document.querySelector("#card-template"),cardAddButton:t.querySelector("#card-add-button"),profileEdit:document.querySelector("#profile-edit"),profileEditForm:document.forms["profile-edit-form"],profileTitleInput:document.querySelector("#profile-edit-title-input"),profileDescriptionInput:document.querySelector("#profile-edit-description-input"),cardAdd:s,cardAddForm:document.forms["card-add-form"],cardTitleInput:s.querySelector("#card-add-title-input"),cardImageInput:s.querySelector("#card-add-link-input"),imageModal:r,imageModalImage:r.querySelector("#image-modal-image"),imageModalSubText:r.querySelector("#image-modal-sub-text")};class n{constructor(e,t,s,r,i){let{name:n,link:o,_id:a,isLiked:l}=e;this._name=n,this._link=o,this._id=a,this.isLiked=l,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteCardClick=r,this._handleLikeClick=i}getId(){return this._id}_setEventListeners(){this._likeBtnEl.addEventListener("click",(()=>{this._handleLikeClick()})),this._trashBtnEl.addEventListener("click",(()=>{this._handleDeleteCardClick(this)})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}setIsLiked(e){this.isLiked=e,this._likeBtnEl.classList.toggle("card__button-like_active",e)}initializeCardLike(){this.isLiked&&this._likeBtnEl.classList.add("card__button-like_active")}handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}getView(){return this._cardElement=document.querySelector("#card-template").content.querySelector(".card").cloneNode(!0),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._trashBtnEl=this._cardElement.querySelector(".card__button-trash"),this._likeBtnEl=this._cardElement.querySelector(".card__button-like"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl.textContent=this._name,this.initializeCardLike(),this._setEventListeners(),this._cardElement}}class o{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent=""}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}disableSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableSubmitButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableSubmitButton():this._enableSubmitButton()}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState(this._inputEls)}))}))}resetValidation(){this._inputEls.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class a{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._containerElement=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._containerElement.prepend(e)}}class l{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target===e.currentTarget||e.target.classList.contains("modal__close-button"))&&this.close()}))}}class d extends l{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitBtn=this._popupForm.querySelector("[type=submit]"),this._handleFormSubmit=t,this._inputs=this._popupForm.querySelectorAll("input")}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}setInputValues(e){this._inputs.forEach((t=>{t.value=e[t.name]}))}}const c=new d("#card-add",(e=>{const t={name:e.title,link:e.description};c._submitBtn.textContent="Saving...",E.addCard(t).then((e=>{k(e),c.close(),i.cardAddForm.reset(),S.disableSubmitButton()})).catch((e=>{console.error(e),alert(`${e}, Could not add new card`)})).finally((()=>{c._submitBtn.textContent="Save"}))}));c.setEventListeners();const u=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:r}=e;this._name=document.querySelector(t),this.about=document.querySelector(s),this._avatar=document.querySelector(r)}getUserInfo(){return{title:this._name.textContent,description:this.about.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._name.textContent=t,this.about.textContent=s}setUserAvatar(e){let{avatar:t}=e;this._avatar.src=t}}({nameSelector:".profile__title",jobSelector:".profile__description",avatarSelector:"#profile-avatar"}),h=new d("#profile-edit",(e=>{h._submitBtn.textContent="Saving...",E.updateProfileInfo(e.title,e.description).then((e=>{h._submitBtn.textContent="Save",u.setUserInfo(e),h.close()})).catch((e=>{console.error(e),alert(`${e}, Could not load profile info`)}))}));h.setEventListeners();const _=new d("#update-avatar",(e=>{_._submitBtn.textContent="Saving...",E.updateProfilePhoto(e.description).then((e=>{u.setUserAvatar(e),_.close()})).catch((e=>{console.error(e),alert(`${e}, Could not load profile avatar`)})).finally((()=>{_._submitBtn.textContent="Save"}))}));_.setEventListeners();const m=new class extends l{constructor(e){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this.submitButton=this._popupForm.querySelector("[type=submit]")}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}setSubmitAction(e){this._handleFormSubmit=e}}("#card-delete-conformation");m.setEventListeners();const p=new class extends l{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector("#image-modal-image"),this._text=this._popupElement.querySelector("#image-modal-sub-text")}open(e){this._image.src=e.link,this._text.textContent=e.name,this._image.alt=`Photo of ${e.name}`,super.open()}}("#image-modal");p.setEventListeners();const E=new class{constructor(e){let{baseUrl:t,authToken:s}=e;this._baseUrl=t,this._authToken=s,this._headers={authorization:this._authToken,"Content-Type":"application/json"}}_checkResOk(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResOk)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResOk)}updateProfileInfo(e,t){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResOk)}updateProfilePhoto(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResOk)}addCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._checkResOk)}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResOk)}addLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResOk)}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResOk)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",authToken:"e254619e-7195-4851-a257-08f38c23767e"});let f;E.getInitialCards().then((e=>{f=new a({items:e,renderer:k},".cards__list"),f.renderItems()})).catch((e=>{console.error(e),alert(`${e}, Could not load cards`)})),E.getUserInfo().then((e=>{u.setUserInfo(e),u.setUserAvatar(e)})).catch((e=>{console.error(e),alert(`${e}, Could not load user info`)}));const v=new o(e,i.profileEditForm);v.enableValidation();const S=new o(e,i.cardAddForm);function b(e){m.open(),m.setSubmitAction((()=>{m.submitButton.textContent="Saving...",E.removeCard(e.getId()).then((()=>{e.handleDeleteCard(),m.close()})).catch((e=>{console.error(e),alert(`${e}, Could not delete card`)})).finally((()=>{m.submitButton.textContent="Yes"}))}))}function k(e){const t=new n(e,".card-template",C,b,(()=>{t.isLiked?E.removeLike(t._id).then((e=>{t.setIsLiked(e.isLiked)})):E.addLike(t._id).then((e=>{t.setIsLiked(e.isLiked)}))}));f.addItem(t.getView())}function C(e){p.open(e)}S.enableValidation(),new o(e,i.updateAvatarForm).enableValidation(),i.profileEditButton.addEventListener("click",(function(){v.resetValidation(),h.setInputValues(u.getUserInfo()),h.open()})),i.cardAddButton.addEventListener("click",(()=>c.open())),i.profileAvatarButton.addEventListener("click",(()=>{_.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,